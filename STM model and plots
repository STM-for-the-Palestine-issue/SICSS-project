install.packages("stm")
install.packages("quanteda")
install.packages("lubridate")

library(stm)
library(quanteda)
library(lubridate)


bearer_token <- ...

texts2$days <- day(texts2$created_at)

texts2$US <- factor(texts2$US,
                    levels = c(0,1),
                    labels = c("UK", "US"))

                    
texts2$threshold <- factor(texts2$threshold,
                    levels = c(0,1),
                    labels = c("Before", "After"))

mycorpus <- corpus(texts2)

token <-
  tokens(
    mycorpus,
    remove_numbers = TRUE,
    remove_punct = TRUE,
    remove_symbols = TRUE,
    remove_url = TRUE,
    split_hyphens = TRUE,
    include_docvars = TRUE)

token_ungd1 <- tokens_select(
  token,
  c("[\\d-]", "[[:punct:]]", "^.{1,2}$"),
  selection = "remove",
  valuetype = "regex",
  verbose = TRUE)

token_ungd2 <- tokens_remove(
  token_ungd1,
  pattern = stopwords(source="smart"))

token_ungd3 <- tokens_tolower(
  token_ungd2, 
  keep_acronyms = FALSE)

token_ungd4 <- tokens_wordstem(
  token_ungd3, 
  language = "en")

mydfm <- dfm(token_ungd4)

mydfm.trim <-
  dfm_trim(
    mydfm,
    min_docfreq = 0.001, 
    max_docfreq = 0.25,
    docfreq_type = "prop")

library(stm)
# Assigns the number of topics
topic.count <- 9
# Convert DFM to a STM object
dfm2stm <- convert(mydfm.trim,
                   to = "stm")
# Run the topic model
model.stm <- stm(
  dfm2stm$documents,
  dfm2stm$vocab,
  K = topic.count,
  prevalence = ~ US + threshold + s(days),
  data = dfm2stm$meta,
  init.type = "Spectral")




### Plot

plot(model.stm)
plot(model.stm, type = "summary", xlim = c(0, .3))
plot(model.stm, type = "labels", xlim = c(0, .3))



predict_topics <- estimateEffect(formula = 1:9 ~ threshold + US + s(days), stmobj = model.stm, metadata = dfm2stm$meta, un = "Global")

plot(predict_topics, covariate = "US", topics = 1:9,
     model = model.stm, method = "difference",
     cov.value1 = 0, cov.value2 = 1,
     xlab = "US vs UK",
     main = "Effects of country",
     #xlim = c(-.1, .1), 
     labeltype = "custom")

plot(predict_topics, covariate = "threshold", topics = 1:9,
     model = model.stm, method = "difference",
     cov.value1 = 1, cov.value2 = 0,
     xlab = "before ..... after",
     main = "Effects of Hamas rockets",
     #xlim = c(-.1, .1), 
     labeltype = "custom")


## plot change in the prevalence of topic over time

plot(predict_topics, "days", method = "continuous", topics = 9,
     model = z, xaxt = "n", xlab = "days in May", printlegend = FALSE)

dayseq <- seq(from = as.Date("2021-05-01"),
                to = as.Date("2021-05-31"), by = "day")
axis(1,at = as.numeric(dayseq) - min(as.numeric(dayseq)),
     labels = 1:31)
legend(10, 95, legend=c("1","2","3","4","5","6","7"),
       col=c("red","blue","red","blue","red","blue","red"))


install.packages("quanteda.textplots")
library(quanteda.textplots)

textplot_wordcloud(mydfm, comparison = FALSE, max_words = 300, color = rev(RColorBrewer::brewer.pal(10, "RdBu")))

mydfm_groupedbyUS <- dfm_group(mydfm, groups = US)
mydfm_groupedbythreshold <- dfm_group(mydfm, groups = threshold)

textplot_wordcloud(mydfm_groupedbyUS, comparison = TRUE, max_words = 300, color = rev(RColorBrewer::brewer.pal(10, "RdBu")))
textplot_wordcloud(mydfm_groupedbythreshold, comparison = TRUE, max_words = 300, color = rev(RColorBrewer::brewer.pal(10, "RdBu")))


install.packages("quanteda.textstats")
library(quanteda.textstats)
library(ggplot2)
        
freq_weight <- textstat_frequency(mydfm.trim, n = 10, 
                                  groups = mydfm.trim$threshold)
#change threshold with US

ggplot(data = freq_weight, aes(x = nrow(freq_weight):1, y = frequency)) +
  geom_point() +
  facet_wrap(~ group, scales = "free") +
  coord_flip() +
  scale_x_continuous(breaks = nrow(freq_weight):1,
                     labels = freq_weight$feature) +
  labs(x = NULL, y = "Relative frequency")


result_keyness1 <- textstat_keyness(mydfm_groupedbyUS, target = 1)
textplot_keyness(result_keyness1)

result_keyness2 <- textstat_keyness(mydfm_groupedbythreshold, target = 1)
textplot_keyness(result_keyness2) 


install.packages("dplyr")
library(tidytext)
library(dplyr)
library(ggplot2)

model.stm_tidy <- tidy(model.stm, matrix = "beta")

model.stm_tidy_terms <- 
  model.stm_tidy %>%
  group_by(topic) %>%
  top_n(10, beta) %>%
  ungroup() %>%
  arrange(topic, -beta)

model.stm_tidy_terms %>%
  mutate(term = reorder(term, beta)) %>%
  ggplot(aes(term, beta, fill = factor(topic))) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~ topic, scales = "free") +
  coord_flip()
